version: '3'

services:
  web:
    image: nginx:1.17.2
    restart: always
    ports:
        - "80:80"
    depends_on:
      - golang
    volumes:
        - ./nginx/mysite.template:/etc/nginx/conf.d/mysite.template
    command: /bin/bash -c "envsubst '' < /etc/nginx/conf.d/mysite.template > /etc/nginx/conf.d/default.conf && nginx -g 'daemon off;'"

  golang:
    build: 
      context: ${GO_API}
      dockerfile: ${GO_API}/build/dev/Dockerfile
    env_file: ${GO_API}/.env
    depends_on:
      - database
    volumes:
      - ${GO_API}:/app
    ports:
      - "8080:8080"
      
  database:
    image: postgres:11.5
    env_file: ${GO_API}/.env
    ports:
      - "5432:5432"
    volumes:
      - db_postgres:/var/lib/postgresql/data 
      - ${GO_API}/internal/platform/db/seeds:/front/seeds

  nodejs:
    image: node:12.8.0-alpine
    env_file: ${NODE_SPA}/.env
    command: sh -c "yarn install && yarn dev"
    ports:
      - "3000:3000"
    environment:
      - HOST=0.0.0.0
      - PORT=3000
    volumes:
      - ${NODE_SPA}:/app
      - /app/node_modules
    working_dir: /app

volumes:
  db_postgres: {}

